"""
Calculator Handler - шобчоЧхЩихдДчРЖхЩи
хдДчРЖцХ░хнжшобчоЧчЫ╕хЕ│чЪДцЯешпвшп╖ц▒Вя╝Ичд║ф╛ЛхоЮчО░я╝Й
"""

import re
import logging
from core.base import ToolHandler

class CalculatorHandler(ToolHandler):
    """шобчоЧхЩихдДчРЖхЩи - чд║ф╛Л"""
    
    def get_tool_name(self) -> str:
        return "calculator"
    
    def get_description(self) -> str:
        return "цХ░хнжшобчоЧуАБхЕмх╝Пш┐РчоЧ"
    
    def can_handle(self, query: str) -> bool:
        calc_keywords = ["шобчоЧ", "чоЧ", "чнЙф║О", "+", "-", "*", "/", "=", "цХ░хнж"]
        math_patterns = [r'\d+\s*[+\-*/]\s*\d+', r'шобчоЧ.*\d+']
        
        # цгАцЯехЕ│щФошпН
        if any(keyword in query for keyword in calc_keywords):
            return True
        
        # цгАцЯецХ░хнжшбиш╛╛х╝Пцибх╝П
        return any(re.search(pattern, query) for pattern in math_patterns)
    
    def handle(self, query: str) -> dict:
        # TODO: хоЮчО░хЕ╖ф╜УчЪДшобчоЧщА╗ш╛С
        logging.info(f"ЁЯзо шобчоЧшп╖ц▒В: {query}")
        return {
            "think": "шпЖхИлф╕║шобчоЧшп╖ц▒Вя╝Мф╜ЖшобчоЧцЬНхКбх░ЪцЬкхоЮчО░",
            "answer": "ЁЯзо шобчоЧхКЯшГ╜х╝АхПСф╕ня╝МцХмшп╖цЬЯх╛Ея╝Б\n\nхжВщЬАшобчоЧя╝Мшп╖х░ЭшпХф╜┐чФишобчоЧхЩих║ФчФиуАВ"
        } 